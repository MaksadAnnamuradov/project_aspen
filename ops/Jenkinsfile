def repo = 'ssh://git@github.com/SnowSE/project_aspen.git'

pipeline {
    agent none
    stages {
        stage(test) {
            agent {
                label 'engineering.snow.edu'
            }
            steps {
                git branch: "${env.BRANCH_NAME}", credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb', url: "$repo"
                sh """
                  cd ops
                  COMPOSE_DOCKER_CLI_BUILD=1 docker-compose build --parallel --pull
                  docker-compose up -d
                  docker exec api_test dotnet test
                """
            }
        }
        stage(merge) {
            agent {
                label 'engineering.snow.edu'
            }
            steps {
                git branch: "${env.BRANCH_NAME}", credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb', url: "$repo"
                checkout([
                    $class: 'GitSCM',
                    extensions: [
                        // [
                        //     $class: "PreBuildMerge",
                        //     options: [
                        //         mergeTarget: "master",
                        //         fastForwardMode: "FF",
                        //         mergeRemote: "origin",
                        //         mergeStrategy: "RECURSIVE_THEIRS"
                        //     ],
                        // ],
                        // [
                        //     $class: 'LocalBranch', 
                        //     localBranch: "master"
                        // ],
                        [$class: 'LocalBranch'],
                        [$class: 'WipeWorkspace'],
                        [$class: 'CloneOption', shallow: false, honorRefspec: true],
                        [
                            $class: 'UserIdentity',
                            email: 'jenkins@snow.edu',
                            name: 'Jenkins Pipeline'
                        ],
                    ],
                    userRemoteConfigs: [[
                      credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb',
                      name: 'origin',
                      url: "$repo"
                    ]]
                ])
                sh """
                  git status
                  git checkout master
                  git pull
                  git status
                  git merge ${env.BRANCH_NAME}
                  git commit -am "Merged ${env.BRANCH_NAME} branch to master"
                  git push origin master
                """
                  // git status
                  // git push --set-upstream origin master
            }
        }
    }
    post { 
        always { 
          node('engineering.snow.edu') {
                git branch: "${env.BRANCH_NAME}", credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb', url: "$repo"
                sh """
                  cd ops
                  docker-compose down 
                """
          }
        }
    }
}