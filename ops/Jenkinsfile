def repo = 'ssh://git@github.com/SnowSE/project_aspen.git'
def mergeBeforeBuild() {
  // Pull the source and test a merge
  try {
    def sourceScmCheck = checkout changelog: true, poll: true, scm: [
      $class: 'GitSCM',
      branches: [[name: "origin/$BRANCH_NAME" ]],
      doGenerateSubmoduleConfigurations: false,
      extensions: [[
        $class: 'PreBuildMerge',
        options: [
          fastForwardMode: 'FF',
          mergeRemote: 'origin',
          mergeStrategy: 'default',
          mergeTarget: "master"]],
        [$class: 'UserIdentity',
          email: 'jenkins@snow.edu',
          name: 'Jenkins Pipeline'
      ]],
      submoduleCfg: [],
      userRemoteConfigs: [[
        credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb',
        name: 'origin',
        url: "$repo"
      ]]
    ]
  } catch (error) {
    currentBuild.result = 'FAILURE'
    echo "ERROR: ${error}"
    sh 'false'
  }
}


pipeline {
    agent none
    stages {
        stage(test) {
            agent {
                label 'engineering.snow.edu'
            }
            steps {
                git branch: "${env.BRANCH_NAME}", credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb', url: "$repo"
                sh """
                  cd ops
                  COMPOSE_DOCKER_CLI_BUILD=1 docker-compose build --parallel --pull
                  docker-compose up -d
                  docker exec api_test dotnet test
                """
            }
        }
        stage(merge) {
            agent {
                label 'engineering.snow.edu'
            }
            steps {
                git branch: "${env.BRANCH_NAME}", credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb', url: "$repo"
                mergeBeforeBuild()
                // sh """
                //   git remote set-branches --add origin master
                //   git config --global user.email "jenkins@snow.edu"
                //   git config --global user.name "Jenkins Pipeline"
                //   git checkout --track origin/master
                //   git merge --no-ff ${env.BRANCH_NAME}
                //   git push origin master
                // """
            }
        }
    }
    post { 
        always { 
          node('engineering.snow.edu') {
                git branch: "${env.BRANCH_NAME}", credentialsId: 'ea61f9dc-d1a9-4eb7-8b4c-441ad8bed5fb', url: "$repo"
                sh """
                  cd ops
                  docker-compose down 
                """
          }
        }
    }
}