version: '3.7'

services:
  web:
    container_name: web
    build:
      context: web/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 5s
      timeout: 1s
      retries: 5
    networks:
      shared:

  api:
    container_name: api
    build:
      context: api/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 5s
      timeout: 1s
      retries: 5
    networks:
      shared:
      api:
    depends_on:
      api_db:
        condition: service_healthy

  api_db:
    image: postgres
    container_name: api_db
    volumes:
      - api_db:/var/lib/postgresql/data
      - ../dev-resources/auth_db/auth_db.sql:/docker-entrypoint-initdb.d/auth_db.sql
    environment:
      POSTGRES_DB: aspen
      POSTGRES_USER: aspen
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 1s
      retries: 5
    networks:
      api:    

  auth:
    build:
      context: ../dev-resources/keycloak
    container_name: auth
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=auth_db
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_SCHEMA=public
      - DB_PASSWORD=password
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - PROXY_ADDRESS_FORWARDING=true
      # KEYCLOAK_HOSTNAME: localhost
      # KEYCLOAK_HTTP_PORT: 3000
      # KEYCLOAK_FRONTEND_URL: http://localhost:3000/auth/
      # PROXY_ADDRESS_FORWARDING: "true"
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/"]
      interval: 3s
      timeout: 1s
      retries: 15
    networks:
      shared:
      auth:
    depends_on:
      auth_db:
        condition: service_healthy

  auth_db:
    image: postgres
    container_name: auth_db
    volumes:
      - auth_db:/var/lib/postgresql/data
      - ../dev-resources/keycloak/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 1s
      retries: 15
    networks:
      auth:

  reverse_proxy:
    build:
      context: ../dev-resources/reverse-proxy
    container_name: reverse_proxy
    volumes: 
      - ../dev-resources/reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/50x.html"]
      interval: 3s
      timeout: 1s
      retries: 5
    networks:
      shared:
    depends_on:
      auth:
        condition: service_healthy
      api:
        condition: service_healthy
      web:
        condition: service_healthy

volumes:
  auth_db:
  api_db:

networks:
  shared:
  auth:
  api: